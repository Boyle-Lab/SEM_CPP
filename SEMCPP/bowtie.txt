PLAN: directly pass data into the corresponding data structure,
      that reads in from a file, line 1077 ebwt.h

      BOWTIE_MM should be defined

readIntoMemory 2901 ebwt.h
Ebwt ctor 365 ebwt.h
definition of relevant macros 18 mm.h
look in class Ebwt for the ctor with first argument as string, and

order of file opening calls from driver -> Ebwt ctor(string, ...) -> readIntoMemory(args)

close is used by linux, check linux manual

MM_FILE is int, thus _in1 and _in2 are int


how to work with bowtie?

investigate line 1590 hit.h, line 298 hit.h, line 2632 ebwt_search.cpp
also line 906 hit.h for initDumps(), which is called by ctor of HitSink

I realized that the author uses compiler macro's to effectively
copy and paste function arguments. I haven't seen that before.

main just processes the arguments, within main_bowtie.cpp
there is a "driver" function in ebwt_search.cpp, start there.
driver function takes six arguments, const char * type,
				     const string& ebwtFileBase,
				     const string& query,
				     const vector<string>& queries,
				     const vector<string>& qualities,
				     const string& outfile.
"type" is seemingly not used within driver
"ebwtFileBase" is some sort of name for a file

main seems to just set up bowtie, but ebwt_search.cpp actually
processes data and outputs whatever output

driver within ebwt_search.cpp is the "driver."
driver expects filenames.
part of driver is just processing the files

TODO: will "redesign" driver

      may pass a string vector in by reference, for the output

NOTE: when running make, on current Makefile, there is a failed compilation
      as there is a similarly named library within the clang library on macOS

      adjusted Makefile

      this problem does not occur when compiling on Linux, as I compiled
      successfully within CAEN


my $command = "./bin/bowtie --quiet -a -v 0 $GENOME -f $DNA_FA_FILE";
                      print results only, report all alignments per read,
                      report end-to-end hits with less than or
                      equal to 0 mismatches.

                      ebwtfile is $GENOME, i believe, while $DNA_FA_FILE is
                      the query file

I believe '1' or '2' or ARG_ONETWO are not used, despite global presence of
the corresponding variables

2287
FastaPatternSource(seed, reads, quals, color, randomizeQuals,
                  patDumpfile, verbose, trim3, trim5, solexaQuals,
                  phred64Quals, integerQuals, skipReads)

                  [
                    seed is just 0, reads is queries, quals is NULL, !color, randomizeQuals == false.
                    patDumpfile is NULL, !verbose, trim3 == 0, trim5 == 0, !solexaQuals,
                    !phred64Quals, !integerQuals, skipReads == 0
                  ]

 2629
VerboseHitSink(
    fout, offBase,
    colorSeq, colorQual, printCost,
    suppressOuts, rmap, amap,
    fullRef, PASS_DUMP_FILES,
    format == TAB_MATE, sampleMax,
    table, refnames, partitionSz)
    [
      fout is output stream thing, of a custom type, offBase is 0,
      colorSeq is false, !colorQual, !printCost,
      suppressOuts is a bitset initialized to 0, rmap == amap == NULL,
      !fullRef,
    ]
